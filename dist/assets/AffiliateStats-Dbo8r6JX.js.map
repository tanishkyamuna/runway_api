{"version":3,"file":"AffiliateStats-Dbo8r6JX.js","sources":["../../src/lib/affiliateService.js","../../src/components/AffiliateStats.jsx"],"sourcesContent":["import { supabase } from './supabase';\nimport toast from 'react-hot-toast';\n\nclass AffiliateService {\n  /**\n   * Creates a new affiliate account for a user\n   */\n  async createAffiliate(userId) {\n    try {\n      const { data, error } = await supabase\n        .rpc('create_affiliate', { user_id: userId });\n\n      if (error) throw error;\n      return data;\n    } catch (error) {\n      console.error('Error creating affiliate:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * Gets affiliate information for a user\n   */\n  async getAffiliateInfo(userId) {\n    try {\n      // Use RPC function to get affiliate info\n      const { data: affiliateInfo, error: affiliateError } = await supabase\n        .rpc('get_affiliate_info', { user_id: userId });\n\n      if (affiliateError) throw affiliateError;\n\n      // Get referrals separately\n      const { data: referrals, error: referralsError } = await supabase\n        .from('affiliate_referrals')\n        .select('*')\n        .eq('affiliate_id', affiliateInfo[0]?.id)\n        .order('created_at', { ascending: false });\n\n      if (referralsError) throw referralsError;\n\n      return {\n        ...affiliateInfo[0],\n        affiliate_referrals: referrals || []\n      };\n    } catch (error) {\n      console.error('Error getting affiliate info:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * Records a referral visit\n   */\n  async recordReferralVisit(affiliateCode) {\n    try {\n      // Store referral code in localStorage\n      localStorage.setItem('referralCode', affiliateCode);\n      \n      const { data: affiliate, error: affiliateError } = await supabase\n        .from('affiliates')\n        .select('id, code')\n        .eq('code', affiliateCode)\n        .single();\n\n      if (affiliateError) throw affiliateError;\n\n      // Create referral record\n      const { error: referralError } = await supabase\n        .from('affiliate_referrals')\n        .insert({\n          affiliate_id: affiliate.id,\n          status: 'pending'\n        });\n\n      if (referralError) throw referralError;\n\n      return true;\n    } catch (error) {\n      console.error('Error recording referral:', error);\n      return false;\n    }\n  }\n\n  /**\n   * Converts a referral after payment\n   */\n  async convertReferral(userId, amount) {\n    try {\n      const referralCode = localStorage.getItem('referralCode');\n      if (!referralCode) return;\n\n      const { data: affiliate, error: affiliateError } = await supabase\n        .from('affiliates')\n        .select('id, commission_rate')\n        .eq('code', referralCode)\n        .single();\n\n      if (affiliateError) throw affiliateError;\n\n      const commissionAmount = (amount * affiliate.commission_rate) / 100;\n\n      // Update referral\n      const { error: updateError } = await supabase\n        .from('affiliate_referrals')\n        .update({\n          referred_user_id: userId,\n          status: 'converted',\n          commission_amount: commissionAmount\n        })\n        .eq('affiliate_id', affiliate.id)\n        .eq('status', 'pending');\n\n      if (updateError) throw updateError;\n\n      // Update total earnings\n      const { error: earningsError } = await supabase\n        .rpc('update_affiliate_earnings', {\n          affiliate_id: affiliate.id,\n          amount: commissionAmount\n        });\n\n      if (earningsError) throw earningsError;\n\n      // Clear referral code\n      localStorage.removeItem('referralCode');\n\n      return true;\n    } catch (error) {\n      console.error('Error converting referral:', error);\n      return false;\n    }\n  }\n}\n\nexport const affiliateService = new AffiliateService();","import React, { useState, useEffect } from 'react';\nimport { supabase } from '../lib/supabase';\nimport { affiliateService } from '../lib/affiliateService';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { Copy, DollarSign, Users, TrendingUp } from 'lucide-react';\nimport toast from 'react-hot-toast';\n\nconst AffiliateStats = () => {\n  const [affiliateData, setAffiliateData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    loadAffiliateData();\n  }, []);\n\n  const loadAffiliateData = async () => {\n    try {\n      const { data: { user } } = await supabase.auth.getUser();\n      if (!user) {\n        toast.error('Please sign in to access the affiliate dashboard');\n        navigate('/login');\n        return;\n      }\n\n      const data = await affiliateService.getAffiliateInfo(user.id);\n      setAffiliateData(data);\n    } catch (error) {\n      console.error('Error loading affiliate data:', error);\n      toast.error('Failed to load affiliate data');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const copyReferralLink = () => {\n    if (!affiliateData?.code) {\n      toast.error('No referral link available');\n      return;\n    }\n    \n    const referralLink = `${window.location.origin}/?ref=${affiliateData.code}`;\n    navigator.clipboard.writeText(referralLink);\n    toast.success('Referral link copied to clipboard!');\n  };\n\n  if (loading) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 p-8\">\n        <div className=\"max-w-4xl mx-auto\">\n          <div className=\"text-center py-12\">Loading...</div>\n        </div>\n      </div>\n    );\n  }\n\n  if (!affiliateData) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 py-12\">\n        <div className=\"max-w-4xl mx-auto px-4\">\n          <div className=\"bg-white rounded-lg shadow-lg p-8 text-center\">\n            <h2 className=\"text-2xl font-bold mb-4\">Become an Affiliate</h2>\n            <p className=\"text-gray-600 mb-8\">\n              Share PropVid with your audience and earn 10% commission on every sale!\n            </p>\n            <button\n              onClick={async () => {\n                try {\n                  const { data: { user } } = await supabase.auth.getUser();\n                  if (!user) {\n                    toast.error('Please sign in to become an affiliate');\n                    navigate('/login');\n                    return;\n                  }\n                  await affiliateService.createAffiliate(user.id);\n                  toast.success('Affiliate account created!');\n                  loadAffiliateData();\n                } catch (error) {\n                  console.error('Error creating affiliate:', error);\n                  toast.error('Failed to create affiliate account');\n                }\n              }}\n              className=\"bg-blue-600 text-white px-6 py-3 rounded-lg hover:bg-blue-700 transition-colors\"\n            >\n              Join Affiliate Program\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  const referrals = affiliateData.affiliate_referrals || [];\n  const totalEarnings = affiliateData.total_earnings || 0;\n  const pendingReferrals = referrals.filter(r => r.status === 'pending').length;\n  const convertedReferrals = referrals.filter(r => r.status === 'converted').length;\n\n  return (\n    <div className=\"min-h-screen bg-gray-50 py-12\">\n      <div className=\"max-w-4xl mx-auto px-4\">\n        <h1 className=\"text-3xl font-bold mb-8\">Affiliate Dashboard</h1>\n\n        {/* Stats Grid */}\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 mb-8\">\n          <div className=\"bg-white p-6 rounded-lg shadow\">\n            <div className=\"flex items-center gap-3 mb-4\">\n              <DollarSign className=\"text-green-500\" />\n              <h3 className=\"font-bold\">Total Earnings</h3>\n            </div>\n            <p className=\"text-2xl font-bold\">${totalEarnings.toFixed(2)}</p>\n          </div>\n\n          <div className=\"bg-white p-6 rounded-lg shadow\">\n            <div className=\"flex items-center gap-3 mb-4\">\n              <Users className=\"text-blue-500\" />\n              <h3 className=\"font-bold\">Total Referrals</h3>\n            </div>\n            <p className=\"text-2xl font-bold\">{referrals.length}</p>\n          </div>\n\n          <div className=\"bg-white p-6 rounded-lg shadow\">\n            <div className=\"flex items-center gap-3 mb-4\">\n              <TrendingUp className=\"text-purple-500\" />\n              <h3 className=\"font-bold\">Conversion Rate</h3>\n            </div>\n            <p className=\"text-2xl font-bold\">\n              {referrals.length ? \n                ((convertedReferrals / referrals.length) * 100).toFixed(1) : 0}%\n            </p>\n          </div>\n        </div>\n\n        {/* Referral Link */}\n        <div className=\"bg-white p-6 rounded-lg shadow mb-8\">\n          <h3 className=\"font-bold mb-4\">Your Referral Link</h3>\n          <div className=\"flex items-center gap-2\">\n            <input\n              type=\"text\"\n              value={`${window.location.origin}/?ref=${affiliateData.code}`}\n              readOnly\n              className=\"flex-1 p-3 border rounded bg-gray-50\"\n            />\n            <button\n              onClick={copyReferralLink}\n              className=\"p-3 text-blue-600 hover:bg-blue-50 rounded-lg transition-colors\"\n            >\n              <Copy className=\"w-5 h-5\" />\n            </button>\n          </div>\n        </div>\n\n        {/* Recent Referrals */}\n        <div className=\"bg-white rounded-lg shadow\">\n          <div className=\"p-6 border-b\">\n            <h3 className=\"font-bold\">Recent Referrals</h3>\n          </div>\n          <div className=\"p-6\">\n            {referrals.length > 0 ? (\n              <div className=\"overflow-x-auto\">\n                <table className=\"w-full\">\n                  <thead>\n                    <tr className=\"text-left border-b\">\n                      <th className=\"pb-3 font-medium\">Date</th>\n                      <th className=\"pb-3 font-medium\">Status</th>\n                      <th className=\"pb-3 font-medium\">Commission</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {referrals.map(referral => (\n                      <tr key={referral.id} className=\"border-b last:border-0\">\n                        <td className=\"py-3\">\n                          {new Date(referral.created_at).toLocaleDateString()}\n                        </td>\n                        <td className=\"py-3\">\n                          <span className={`px-2 py-1 rounded-full text-sm ${\n                            referral.status === 'converted' \n                              ? 'bg-green-100 text-green-700'\n                              : 'bg-yellow-100 text-yellow-700'\n                          }`}>\n                            {referral.status}\n                          </span>\n                        </td>\n                        <td className=\"py-3\">\n                          {referral.commission_amount \n                            ? `$${referral.commission_amount.toFixed(2)}`\n                            : '-'\n                          }\n                        </td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </table>\n              </div>\n            ) : (\n              <p className=\"text-gray-500 text-center py-4\">\n                No referrals yet. Share your link to start earning!\n              </p>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AffiliateStats;"],"names":["AffiliateService","userId","data","error","supabase","affiliateInfo","affiliateError","referrals","referralsError","_a","affiliateCode","affiliate","referralError","amount","referralCode","commissionAmount","updateError","earningsError","affiliateService","AffiliateStats","affiliateData","setAffiliateData","useState","loading","setLoading","navigate","useNavigate","useEffect","loadAffiliateData","user","toast","copyReferralLink","referralLink","jsx","jsxs","totalEarnings","convertedReferrals","DollarSign","Users","TrendingUp","Copy","referral"],"mappings":"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"}